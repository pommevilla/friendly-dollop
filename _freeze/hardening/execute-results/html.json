{
  "hash": "813c08633f36109109d31b66f1bfaa28",
  "result": {
    "markdown": "---\nknit: quarto render\n---\n\n# Hardening\n\nRStudio uses secure defaults wherever possible, but for maximal security hardening it's necessary to use values that make stronger assumptions or require additional configuration. This section of the Administration Guide demonstrates the use of these more secure configuration values and describes other security considerations. \n\nA summary of these recommendations in the form of a set of example configuration files is presented at the end of this section: [Example Secure Configuration]\n\n## Set up SSL {.pro-header}\n\nA secure installation of RStudio encrypts network traffic using SSL. SSL doesn't come pre-configured since it requires certificates signed by a Certificate Authority (CA) trusted by all parties. \n\n### Use SSL for Web Users\n\nIf your configuration of RStudio is accessed directly by end users, see the [SSL Configuration] section, which describes how you can ensure that HTTPS is used when RStudio is accessed via a web browser. Note that this does not apply if you are terminating SSL upstream, for example when you are using nginx or Apache in front of RStudio as described in [Running with a Proxy] and handling SSL there.\n\n### Use SSL for the Job Launcher\n\nEnsure that communication with the Job Launcher is encrypted by setting `launcher-use-ssl=1` as follows:\n\n*/etc/rstudio/rserver.conf*\n\n```ini\nlauncher-use-ssl=1\n```\n\nNote that additional configuration for the Job Launcher is required to make it possible to connect to it over SSL. See [Job Launcher Configuration] for details. Example Launcher configuration:\n\n*/etc/rstudio/launcher.conf*\n\n```ini\nenable-ssl=1\ncertificate-file=/var/certs/your_domain_name.crt\ncertificate-key-file=/var/certs/your_domain_name.key  \n```\n\n### Restrict TLS Versions\n\nRStudio Workbench supports many different SSL protocols for compatibility with older browsers, but several are no longer considered secure. We recommend disabling support for all SSL protocols except the most recent two, TLS 1.2 and 1.3. See the [SSL Protocols] section for more details.\n\n*/etc/rstudio/rserver.conf*\n\n```ini\nssl-protocols=TLSv1.2 TLSv1.3\n```\n\n### Use HTTP Strict Transport Security (HSTS)\n\nWhen configured with SSL, RStudio Workbench uses HTTP Strict Transport Security automatically. This is a security setting that forces the browser to always use HTTPS when connecting to RStudio Workbench. We recommend including the maximum age to 1 year, and extending coverage to subdomains. \n\n*/etc/rstudio/rserver.conf*\n\n```ini\nssl-hsts-max-age=31536000\nssl-hsts-include-subdomains=1\n```\n\nThis ensures that the browser will not connect via HTTP to the domain running RStudio Server (and any of its subdomains) for one year.\n\n### Using SSL with RStudio Server Open Source\n\nRStudio Workbench has built-in SSL and HTTPS controls as described in this section. However, much of the same advice applies if you are securing an installation of the Open Source edition of RStudio Server; you can run RStudio Server behind a reverse proxy such as Nginx and perform SSL termination upstream.\n\n## Browser Security\n\nThis section summarizes the recommendations in the [Access and Security] section.\n\n### Enable Origin Checks\n\nTo help mitigate against CSRF attacks, RStudio can automatically reject any request that originated from a domain it doesn't recognize. To enable this check, add the following configuration:\n\n*/etc/rstudio/rserver.conf*\n\n```ini\nwww-enable-origin-check=1\nwww-allow-origin=mysubdomain.mydomain.com\n```\n\nThe `www-allow-origin` setting is optional, but is helpful when RStudio is running behind a proxy. See [Additional Security Considerations] for details.\n\n### Disable Frame Embedding\n\nBy default, RStudio does not permit frame embedding (that is, it will not load inside another web page's `<frameset>` or `<iframe>`). No change is necessary to enforce this, but you can request it explicitly as follows:\n\n*/etc/rstudio/rserver.conf*\n\n```ini\nwww-frame-origin=none\n```\n\n### Set SameSite Cookie Header\n\nRStudio does not set the `SameSite` cookie header by default (see [Same Site cookies] for details). We recommend setting it explicitly. \n\n*/etc/rstudio/rserver.conf*\n\n```ini\nwww-same-site=lax\n```\n\n## R Session Security\n\nRStudio includes a number of options which can help harden the surface of the RStudio IDE itself. The settings in this section all apply to the IDE's user interface for R sessions. \n\nRemember that RStudio is an interface to R itself, which has a variety of tools that can access the file system and shell as the user themselves. Follow security best practices by relying on operating system-level permissions, not front end restrictions, to guard access to sensitive content and files.\n\n### Limit Idle Time\n\nBy default, RStudio allows users to be idle for up to an hour before automatically signing them out. If your users work with sensitive data, you may wish to decrease this.\n\n*/etc/rstudio/rserver.conf*\n\n```\nauth-timeout-minutes=20\n```\n\nSee [Inactivity Timeout] for details.\n\n### Restrict System Directory Access\n\nRStudio can optionally prevent users from browsing to system directories; see [Restricted Directories] for details. Enable this feature as follows:\n\n\n*/etc/rstudio/rsession.conf*\n\n```ini\nrestrict-directory-view=1\n```\n\n### Disable External Publishing {.pro-header}\n\nRStudio includes support for publishing to several external services, including RPubs and Shinyapps.io. If your users work with sensitive information, you should disable publishing to these services as follows:\n\n*/etc/rstudio/rsession.conf*\n\n```ini\nallow-external-publish=0\n```\n\n### Disable Other Features {.pro-header}\n\nThe are a few other features you should consider disabling. We have not included them in our [Example Secure Configuration] because they can impede productivity for end users.\n\n- **Disable shell access** (`allow-shell=0`); disables the Terminal tab used to execute system commands\n- **Disable file downloads** (`allow-file-downloads=0`); disables downloading files using the Files pane\n- **Disable file uploads** (`allow-file-uploads=0`); disables uploading files using the Files pane\n- **Disable package installation** (`allow-package-installation=0`); disables the user interface for installing R packages\n\nNote that regardless of the values of these settings, users can execute system commands, install packages, and upload and download content using R itself.\n\n## Other\n\n### Encrypt Database Password\n\nWhen using PostgreSQL as a database provider, ensure that you're using an encrypted database password as described in [PostgreSQL password encryption].\n\n*/etc/rstudio/database.conf*\n\n```ini\n# Generated by rstudio-server encrypt-password\npassword=ThX7skaB8VhMRk7jQr1J3lS0fk+GLmXDp3JIVcHwPiK1CMixSIEsNTt3cNBYj9Rx\n```\n\n### Enforce Group Requirement\n\nBy default, anyone who can successfully authenticate on the system can use the IDE. You can get more control over who's able to log into the system by creating a group such as `rstudio-users` and instructing RStudio to limit access to that group.\n\n\n*/etc/rstudio/rserver.conf*\n\n```ini\nauth-required-user-group=rstudio-users\n```\n\n## Example Secure Configuration\n\nThis section aggregates all of the security recommendations from the above sections. Note, again, that some adjustment is likely to be necessary depending on your environment; for example, this set of configuration values presumes that SSL termination is happening in RStudio, that RStudio is the only application running on its domain, and that it is never embedded in another page.\n\nTherefore, use these files as a starting point rather than copying and pasting them into your own system.\n\n*/etc/rstudio/rsession.conf*\n\n```ini\n# Disable publishing to RPubs and shinyapps.io\nallow-external-publish=0\n\n# Prevent exploration of system directories\nrestrict-directory-view=1\n```\n\n*/etc/rstudio/rserver.conf*\n\n```ini\n# Limit access to those users to whom it's been explicitly granted via group membership\nauth-required-user-group=rstudio-users\n\n# Sign users out after 20 minutes of inactivity (default is 60)\nauth-timeout-minutes=20\n\n# Use HTTPS when connecting to web browsers\nssl-enabled=1\nssl-certificate=/var/certs/your_domain_name.crt\nssl-certificate-key=/var/certs/your_domain_name.key  \n\n# Limit SSL protocol versions to modern TLS\nssl-protocols=TLSv1.2 TLSv1.3\n\n# Increase HTTP Strict Transport Security to 1 year and include subdomains\nssl-hsts-max-age=31536000\nssl-hsts-include-subdomains=1\n\n# Enable origin checks on all HTTP requests (CSRF defense)\nwww-enable-origin-check=1\n\n# Ensure that the domain on which RStudio is hosted is permitted as an origin\nwww-allow-origin=mysubdomain.mydomain.com\n\n# Ensure the SameSite attribute is set on all cookies\nwww-same-site=lax\n\n# Disallow embedding on other pages\nwww-frame-origin=none\n\n# Use HTTPS when connecting to the Job Launcher\nlauncher-use-ssl=1\n```\n\n*/etc/rstudio/launcher.conf*\n\n```ini\nenable-ssl=1\ncertificate-file=/var/certs/your_domain_name.crt\ncertificate-key-file=/var/certs/your_domain_name.key  \n```\n\n*/etc/rstudio/database.conf*\n\n```ini\n# Generated by rstudio-server encrypt-password\npassword=ThX7skaB8VhMRk7jQr1J3lS0fk+GLmXDp3JIVcHwPiK1CMixSIEsNTt3cNBYj9Rx\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "dependencies": {
      "type": "includes",
      "data": []
    },
    "preserve": {},
    "postProcess": null
  }
}